from .ManagementClientOptions import ManagementClientOptions
from .HttpClient import HttpClient

class ManagementClient(object):
    """Authing Management Client"""
    def __init__(self, options):
        # type:(ManagementClientOptions) -> ManagementClient
        self.options = options
		self.http_client = HttpClient(self.options)

	{{#each operations}}
	def {{{name}}}(self, {{#each parametersRaw.python}}{{name_underscore}}{{#if isRequired}}{{else}}=None{{/if}}{{#if @last}}{{else}},{{/if}} {{/each}}):
		"""{{{summary}}}

		{{{description}}}
		"""
		return self.http_client.request(
			method='{{{method}}}',
			url='{{{path}}}',
			{{#if parametersPath}}
			path={
				{{#each parametersPath}}
				'{{{prop}}}': {{{name}}},
				{{/each}}
			},
			{{/if}}
			{{#if parametersCookie}}
			cookies={
				{{#each parametersCookie}}
				'{{{prop}}}': {{{name}}},
				{{/each}}
			},
			{{/if}}
			{{#if parametersHeader}}
			headers={
				{{#each parametersHeader}}
				'{{{prop}}}': {{{name}}},
				{{/each}}
			},
			{{/if}}
			{{#if parametersQuery}}
			query={
				{{#each parametersQuery}}
				'{{{prop}}}': {{{name}}},
				{{/each}}
			},
			{{/if}}
			{{#if parametersBody}}
			{{#equals parametersBody.in 'formData'}}
			formData={{{parametersBody.name}}},
			{{/equals}}
			{{#equals parametersBody.in 'body'}}
			json={
				{{#each parametersRaw.python}}
				'{{{name}}}': {{{name_underscore}}},
				{{/each}}
			},
			{{/equals}}
			{{/if}}
			{{#if responseHeader}}
			responseHeader='{{{responseHeader}}}',
			{{/if}}
			{{#if errors}}
			errors={
				{{#each errors}}
				{{{code}}}: `{{{escapeDescription description}}}`,
				{{/each}}
			},
			{{/if}}
		)

	{{/each}}
